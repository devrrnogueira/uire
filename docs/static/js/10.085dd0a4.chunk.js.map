{"version":3,"sources":["views/TransitionView/index.js"],"names":["animations","name","state","prestate","el","params","height","offsetHeight","props","opacity","transform","duration","TransitionView","el1","useRef","useState","animation","setAnimation","run","anim","csstransition","current","canceled","console","log","useLayoutEffect","className","onChange","e","target","value","map","item","i","style","border","padding","onClick","ref"],"mappings":"uOAKMA,EAAa,CACf,CACIC,KAAM,aACNC,MAAO,cAEX,CACID,KAAM,cACNC,MAAO,eAEX,CACID,KAAM,YACNC,MAAO,aAEX,CACID,KAAM,eACNC,MAAO,gBAEX,CACID,KAAM,iBACNC,MAAO,CACH,CACIC,SADJ,SACaC,EAAIC,GACTA,EAAOC,OAASF,EAAGG,cAEvBC,MAAO,CACHC,QAAS,EACTC,UAAW,sCAGnB,CACIF,MAAO,CACHG,SAAU,IACVF,QAAS,EACTC,UAAW,6BAK3B,CACIT,KAAM,iBACNC,MAAO,CACH,KACA,CACIC,SADJ,SACaC,EAAIC,GACTA,EAAOC,OAASF,EAAGG,cAEvBC,MAAO,CACHG,SAAU,IACVF,QAAS,EACTC,UAAW,yCAOhB,SAASE,IACpB,IAAMC,EAAMC,mBADyB,EAEHC,mBAAS,GAFN,mBAE9BC,EAF8B,KAEnBC,EAFmB,KASrC,SAASC,IACL,IAAIC,EAAOnB,EAAWgB,GAAWd,MAEjCkB,YAAcP,EAAIQ,SACbH,IAAIC,GAAK,SAACG,GACPC,QAAQC,IAAI,WAAYF,MAQpC,OAlBAG,2BAAgB,WACZP,MAED,CAACF,IAgBA,sBAAKU,UAAU,8BAAf,UACI,gDAEA,qBAAKA,UAAU,OAAf,SACI,wBAAQC,SATpB,SAAkBC,GACdX,EAAaW,EAAEC,OAAOC,QAQcJ,UAAU,SAAtC,SACK1B,EAAW+B,KAAI,SAACC,EAAKC,GAClB,OAAO,wBAAQH,MAAOG,EAAf,SAAmCD,EAAK/B,MAAjB+B,EAAK/B,aAK/C,sBAAKiC,MAAO,CAACC,OAAO,iBAAkBC,QAAQ,IAA9C,UACI,wBAAQC,QAASnB,EAAjB,iBACA,qBAAKoB,IAAKzB,EAAKa,UAAU,WAAzB","file":"static/js/10.085dd0a4.chunk.js","sourcesContent":["import { useLayoutEffect, useRef, useState } from \"react\"\n\nimport './TransitionView.css'\nimport csstransition from \"src/libs/csstransition2\"\n\nconst animations = [\n    {\n        name: 'slide-left',\n        state: 'slide-left'\n    },\n    {\n        name: 'slide-right',\n        state: 'slide-right'\n    },\n    {\n        name: 'slide-top',\n        state: 'slide-top'\n    },\n    {\n        name: 'slide-bottom',\n        state: 'slide-bottom'\n    },\n    {\n        name: 'scaleToTopShow',\n        state: [\n            {\n                prestate(el, params) {\n                    params.height = el.offsetHeight\n                },\n                props: {\n                    opacity: 0,\n                    transform: 'scale(0.4) translateY({height}px)'\n                }\n            },\n            {\n                props: {\n                    duration: 300,\n                    opacity: 1,\n                    transform: 'scale(1) translateY(0)'\n                }\n            }\n        ]\n    },\n    {\n        name: 'scaleToTopHide',\n        state: [\n            null,\n            {\n                prestate(el, params) {\n                    params.height = el.offsetHeight\n                },\n                props: {\n                    duration: 300,\n                    opacity: 0,\n                    transform: 'scale(0.4) translateY({height}px)'\n                }\n            }\n        ]\n    }\n]\n\nexport default function TransitionView() {\n    const el1 = useRef()\n    const [animation, setAnimation] = useState(0)\n    \n    useLayoutEffect(()=>{\n        run()\n    // eslint-disable-next-line\n    }, [animation])\n\n    function run(){\n        let anim = animations[animation].state\n\n        csstransition(el1.current)\n            .run(anim,(canceled)=>{\n                console.log('complete', canceled)\n            })\n    }\n\n    function onChange(e) {\n        setAnimation(e.target.value)\n    }\n\n    return (\n        <div className=\"client vbox v-align--center\">\n            <h1>TransitionView</h1>\n            \n            <div className=\"hbox\">\n                <select onChange={onChange} className=\"select\">\n                    {animations.map((item,i)=>{\n                        return <option value={i} key={item.name}>{item.name}</option>\n                    })}\n                </select>\n            </div>\n\n            <div style={{border:'solid 1px #000', padding:20}}>\n                <button onClick={run}>run</button>\n                <div ref={el1} className=\"el-anima\">Element 01</div>\n            </div>\n        </div>\n    )\n}"],"sourceRoot":""}