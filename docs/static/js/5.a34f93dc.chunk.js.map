{"version":3,"sources":["components/UI/UIChat/index.js","assets/messages.js","views/ComponentsView/UIChatView/Standard.js","webpack:///./src/views/ComponentsView/UIChatView/Standard.js?2060","views/ComponentsView/UIChatView/index.js","webpack:///./src/assets/messages.js?85cc","components/UI/UICard/index.js","components/Demo/index.js"],"names":["UIChat","dialog","owner","bg","bgMessage","bgButton","messages","receivedAvatar","senderAvatar","typing","className","TypingElement","rest","useState","text","setText","showFloatButtons","setShowFloatButtons","divEl","useRef","buttonAttachEl","addMessage","type","warning","setTimeout","current","scrollIntoView","behavior","sanitize","tags","replace","s","href","t","startsWith","match","closeFloatButtons","style","map","message","index","changed","bubbleCls","marginTop","src","alt","dangerouslySetInnerHTML","__html","ref","height","onSubmit","event","input","target","value","preventDefault","content","UIButton","innerRef","onClick","xmlns","width","viewBox","d","onInput","e","UIMenu","transparent","anchor","transition","parent","show","onClose","icon","color","marginBottom","Standard","UICard","maxWidth","UIChatView","padding","Demo","title","code","StandardCode","codes","file","Component","children","header","footer","outline","cls","viewCode","setViewCode","Highlight","html","setHTML","useLayoutEffect","str","hljs","highlight","registerLanguage","javascript"],"mappings":"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","file":"static/js/5.a34f93dc.chunk.js","sourcesContent":["import { useRef, useState } from 'react'\n\nimport UIMenu from 'src/components/UI/UIMenu'\nimport UIButton from '../UIButton'\n\nimport './UIChat.css'\n\nexport default function UIChat({\n    dialog,\n    bg=\"50\",\n    bgMessage={'received':'90', 'sender':'30'},\n    bgButton=\"80\",\n    messages=[],\n    receivedAvatar=\"https://cdn.quasar.dev/img/avatar4.jpg\",\n    senderAvatar=\"https://cdn.quasar.dev/img/avatar3.jpg\",\n    typing,\n    className = '',\n    TypingElement=null,\n    ...rest\n}) {\n    // const [messages, setMessages] = useState([])\n    // const [agent, setAgent] = useState(null)\n    // const [typing, setTyping] = useState(false)\n    const [text, setText] = useState('')\n    const [showFloatButtons, setShowFloatButtons] = useState(false)\n    const divEl = useRef()\n    const buttonAttachEl = useRef()\n\n    let owner\n\n    // useEffect(() => {\n    //     if (!agent) setAgent(new Agent(dialog))\n\n    //     if (agent) {\n    //         agent\n    //             .on('message', (event, intent) => {\n    //                 let {message, context} = event\n    //                 let def = intent.getDef()\n    \n    //                 //altera o contexto atual\n    //                 context.nome = 'fabio nogueira'\n                    \n    //                 addMessage(message.text, 'received', def.key == '@TIMEOUT@' ? 'warning' : '')\n    //             })\n    //             .on('typing', (event, intent) => {\n    //                 setTyping(event.typing)\n    //             })\n    //             .on('run', (def) => {\n    //                 onRun && onRun(def)\n    //             })\n    \n    //         agent.run()\n    //     }\n\n    // // eslint-disable-next-line\n    // }, [agent])\n\n    function addMessage(text, type, warning) {\n        // let item = {\n        //     text,\n        //     type,\n        //     warning\n        // }\n        \n        // setMessages(oldMessages => [...oldMessages, item])\n        scrollToBottom()\n    }\n\n    function onSubmit(event) {\n        let input = event.target[0]\n        let value = input.value\n\n        event.preventDefault()\n        input.value = ''\n\n        addMessage(value, 'sender')\n        // agent.run(value)\n    }\n\n    function scrollToBottom() {\n        setTimeout(() => {\n            divEl.current.scrollIntoView({behavior: 'smooth'})\n        }, 100);\n    }\n\n    function sanitize(text) {\n        let tags = {\n            '<b>': '<b>',  '</b>': '</b>',\n            '<i>': '<i>',  '</i>': '</i>',\n            '<u>': '<u>',  '</u>': '</u>',\n            '<a>': '<a>',  '</a>': '</a>',\n            '<strike>': '<strike>', '</strike>': '</strike>',\n            '<script>': '<code>', '</script>': '</code>',\n            '<code>': '<code>', '</code>': '</code>',\n        }\n\n        return text.replace(/<[^>]*>?/gm, \n            (s) => {\n                let t = tags[s]\n                let href\n                \n                if (t) return t\n                if (s.startsWith('<a')) {\n                    href = s.match(/href=\"([^\"]*)/)\n\n                    return href\n                        ? `<a target=\"_blank\" href=\"${href[1]}\">`\n                        : ''\n                }\n                 \n                return ''\n            });\n            \n    }\n\n    function inputOnInput(e) {\n        setText(e.target.value)\n    }\n\n    function openFloatButtons() {\n        setShowFloatButtons(true)\n    }\n\n    function closeFloatButtons() {\n        setShowFloatButtons(false)\n    }\n\n    return (\n        <div className={\"vbox ui-chat \" + className} {...rest}>\n            <div className={`client ui-chat-messages bg-${bg}`}>\n                <div className=\"ui-chat-scrollarea\" \n                    style={{\n                        // paddingRight: scrollbarWidth,\n                        // marginRight: -scrollbarWidth\n                    }}\n                >\n                    {messages.map((message, index)=>{\n                        let changed = message.owner !== owner\n                        let bubbleCls = `ui-message-bubble bg-${bgMessage[message.type]}-border ${message.warning || ''} ${changed ? 'message-arrow' : ''}`\n\n                        owner = message.owner\n\n                        return (\n                            <div \n                                className={`ui-message-container ui-message-${message.type}`} key={index}\n                                style={{marginTop: changed ? 15 : 0}}\n                            >\n                                {changed && (\n                                    <div className=\"ui-message-avatar\">\n                                        <img src={message.type === 'sender' ? senderAvatar : receivedAvatar} alt=\"avatar\" />\n                                    </div>\n                                )}\n\n                                <div className={bubbleCls}\n                                    dangerouslySetInnerHTML={{\n                                        __html: sanitize(message.text)\n                                    }}>\n                                </div>\n                            </div>\n                        )\n                    })}\n                    <div ref={divEl} style={{height:20}} />\n                </div>\n            </div>\n            \n            <form className={`ui-chat-input `} onSubmit={onSubmit}>\n                {typing && (\n                    <div className=\"ui-chat-typing-container\">\n                        <TypingElement content={typing} />\n                    </div>\n                )}\n\n                {/* Attach button */}\n                <UIButton\n                    innerRef={buttonAttachEl}\n                    bg={bgButton}\n                    className={`ui-chat-button`}\n                    onClick={openFloatButtons}\n                >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" \n                        height=\"24\" \n                        width=\"24\"\n                        viewBox=\"0 0 24 24\" \n                    >\n                        <path d=\"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"/>\n                    </svg>\n                </UIButton>\n                \n                <textarea value={text} onInput={inputOnInput} />\n                \n                {/* Audio button or Send button */}\n                {text\n                    ? (\n                        <UIButton\n                            bg={bgButton}\n                            className={`ui-chat-button`}\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" \n                                height=\"24\" \n                                width=\"24\"\n                                viewBox=\"0 0 24 24\" \n                            >\n                                <path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"/>\n                            </svg>\n                        </UIButton>\n                    )\n                    : (\n                        <UIButton\n                            bg={bgButton}\n                            className={`ui-chat-button`}\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" \n                                height=\"24\" \n                                width=\"24\"\n                                viewBox=\"0 0 24 24\" \n                            >\n                                <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5zm6 6c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\"/>\n                            </svg>\n                        </UIButton>\n                    )}\n            </form>\n            \n            <UIMenu\n                transparent\n                anchor='center-top'\n                transition=\"center-top\"\n                parent={buttonAttachEl}\n                show={showFloatButtons}\n                className=\"ui-chat-menu\"\n                onClose={()=>setShowFloatButtons(false)}\n            >\n                <UIButton \n                    icon=\"file\"\n                    type=\"fab\"\n                    color=\"pink\"\n                    style={{marginBottom:20}}\n                    onClick={closeFloatButtons}\n                />\n                <UIButton \n                    icon=\"camera\"\n                    type=\"fab\"\n                    color=\"deeporange\"\n                    style={{marginBottom:20}}\n                    onClick={closeFloatButtons}\n                />\n                <UIButton \n                    icon=\"image\"\n                    type=\"fab\"\n                    color=\"purple\"\n                    style={{marginBottom:20}}\n                    onClick={closeFloatButtons}\n                />\n            </UIMenu>\n        </div>\n    )\n}\n","const messages = [\n    {\n        text: 'Hi, Kate',\n        type: 'sender',\n        owner: 'a'\n    },\n    {\n        text: `How are you?`,\n        type: 'sender',\n        owner: 'a'\n    },\n    {\n        text: `Hi, I am good!`,\n        type: 'received',\n        owner: 'b'\n    },\n    {\n        text: `Hi there, I am also fine, thanks! And how are you?`,\n        type: 'received',\n        owner: 'b'\n    },\n    {\n        text: `Hey, Blue Ninja! Glad to see you ;)`,\n        type: 'sender',\n        owner: 'a'\n    },\n    {\n        text: `Hey, look, cutest kitten ever!`,\n        type: 'sender',\n        owner: 'a'\n    },\n    {\n        text: `Nice!`,\n        type: 'received',\n        owner: 'b'\n    },\n    {\n        text: `Like it very much!`,\n        type: 'sender',\n        owner: 'a'\n    },\n    {\n        text: `Awesome!`,\n        type: 'sender',\n        owner: 'a'\n    },\n\n]\n\nexport default messages\n","import UICard from \"src/components/UI/UICard\"\nimport UIChat from \"src/components/UI/UIChat\"\n\nimport messages from 'src/assets/messages'\n\nexport default function Standard() {\n    return(\n        <UICard style={{maxWidth:400}}>\n            <UIChat\n                messages={messages}\n                style={{height:400}}\n            />\n        </UICard>\n    )\n}","export default \"import UICard from \\\"src/components/UI/UICard\\\"\\nimport UIChat from \\\"src/components/UI/UIChat\\\"\\n\\nimport messages from 'src/assets/messages'\\n\\nexport default function Standard() {\\n    return(\\n        <UICard style={{maxWidth:400}}>\\n            <UIChat\\n                messages={messages}\\n                style={{height:400}}\\n            />\\n        </UICard>\\n    )\\n}\";","import Demo from \"src/components/Demo\"\n\nimport Standard from \"./Standard\"\nimport StandardCode from \"!!raw-loader!./Standard.js\"\nimport messages from \"!!raw-loader!src/assets/messages\"\n\nexport default function UIChatView() {\n    return (\n        <div style={{padding: 20}}>\n            <div>\n                <div className=\"block-title\">UIChat</div>\n                \n                <div className=\"block-title\">Instalation</div>\n                \n                <div className=\"block-title\">Usage</div>\n                <Demo\n                    title=\"Standard\"\n                    code={StandardCode}\n                    codes={[\n                        {file: 'Standard.js', code: StandardCode},\n                        {file: 'messages.js', code: messages},\n                    ]}\n                    Component={Standard}\n                />\n\n                <div className=\"block-title\">UIChat API</div>\n            </div>\n        </div>\n    )\n}","export default \"const messages = [\\n    {\\n        text: 'Hi, Kate',\\n        type: 'sender',\\n        owner: 'a'\\n    },\\n    {\\n        text: `How are you?`,\\n        type: 'sender',\\n        owner: 'a'\\n    },\\n    {\\n        text: `Hi, I am good!`,\\n        type: 'received',\\n        owner: 'b'\\n    },\\n    {\\n        text: `Hi there, I am also fine, thanks! And how are you?`,\\n        type: 'received',\\n        owner: 'b'\\n    },\\n    {\\n        text: `Hey, Blue Ninja! Glad to see you ;)`,\\n        type: 'sender',\\n        owner: 'a'\\n    },\\n    {\\n        text: `Hey, look, cutest kitten ever!`,\\n        type: 'sender',\\n        owner: 'a'\\n    },\\n    {\\n        text: `Nice!`,\\n        type: 'received',\\n        owner: 'b'\\n    },\\n    {\\n        text: `Like it very much!`,\\n        type: 'sender',\\n        owner: 'a'\\n    },\\n    {\\n        text: `Awesome!`,\\n        type: 'sender',\\n        owner: 'a'\\n    },\\n\\n]\\n\\nexport default messages\\n\";","import './UICard.css'\n\nexport default function UICard({\n    children,\n    header=null,\n    footer=null,\n    outline=false,\n    className=\"\",\n    ...rest\n}) {\n\n    let cls = `card${outline?' card-outline':''} ${className}`\n\n    return (\n        <div className={cls} {...rest}>\n            { header && <div className=\"card-header\">{header}</div> }\n            <div className=\"card-content card-content-padding\">\n                { children }\n            </div>\n            { footer && <div className=\"card-footer\">{footer}</div> }\n        </div>\n    )\n}\n","import { useLayoutEffect, useState } from 'react'\nimport hljs from 'highlight.js'\nimport javascript from 'highlight.js/lib/languages/javascript'\n\nimport 'highlight.js/styles/github.css'\nimport './Demo.css'\nimport UICard from '../UI/UICard'\nimport UIButton from '../UI/UIButton'\n\nhljs.registerLanguage('javascript', javascript)\n\nexport default function Demo({\n    title,\n    code,\n    codes,\n    Component,\n    style\n}){\n    const [viewCode, setViewCode] = useState(false)\n    \n    return (\n        <UICard\n            style={style}\n            header={<>\n                {title}\n                <UIButton icon=\"code-tags\" onClick={()=>{setViewCode(!viewCode)}}/>\n            </>}\n        >\n            {viewCode \n                ? <Highlight code={code}/>\n                : <Component />\n            }\n        </UICard>\n    )\n}\n\nfunction Highlight({code}) {\n    const [html, setHTML] = useState('')\n\n    useLayoutEffect(()=>{\n        let str = hljs.highlight('js', code).value\n        setHTML(str)\n    // eslint-disable-next-line\n    }, [])\n\n    return (\n        <pre\n            dangerouslySetInnerHTML={{\n                __html: html\n            }}>\n        </pre>\n    )\n}"],"sourceRoot":""}